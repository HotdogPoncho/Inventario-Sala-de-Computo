package Clases;

import Conexion.Conexion;
import java.awt.HeadlessException;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HotdogPoncho
 */
public class Formulario extends javax.swing.JInternalFrame {
    DefaultTableModel defaultTableModel;
    Connection connection;
    Conexion conexion = new Conexion();
    Statement statement;
    ResultSet resultSet;
    String[] fields = {"NumeroDeSala","NumeroDeComputadora","NumeroDeInventarioUNAM","NumeroDeSerieCPU","NumeroDeSerieTeclado","NumeroDeSerieMouse","NumeroDeSerieMonitor","MarcaCPU","ModeloCPU","Observaciones"};
    
    
    /**
     * Creates new form Formulario
     */
    public Formulario() {
        initComponents();
        cmdNuevo.setEnabled(true);
        cmdGuardar.setEnabled(false);
        cmdModificar.setEnabled(false);
        cmdEliminar.setEnabled(false);
        disableFields();
        cleanTable();
        getDatos();
    }
    
    public void disableFields(){
        txtSala.setEnabled(false);
        txtComputadora.setEnabled(false);
        txtInventario.setEnabled(false);
        txtSerieCPU.setEnabled(false);
        txtTeclado.setEnabled(false);
        txtMouse.setEnabled(false);
        txtMonitor.setEnabled(false);
        txtMarcaCPU.setEnabled(false);
        txtModeloCPU.setEnabled(false);
        txtObservaciones.setEnabled(false);
    }
    
    public void enableFields(){
        txtSala.setEnabled(true);
        txtComputadora.setEnabled(true);
        txtInventario.setEnabled(true);
        txtSerieCPU.setEnabled(true);
        txtTeclado.setEnabled(true);
        txtMouse.setEnabled(true);
        txtMonitor.setEnabled(true);
        txtMarcaCPU.setEnabled(true);
        txtModeloCPU.setEnabled(true);
        txtObservaciones.setEnabled(true);
    }
    
    public void clean(){
        txtSala.setText("");
        txtComputadora.setText("");
        txtInventario.setText("");
        txtSerieCPU.setText("");
        txtTeclado.setText("");
        txtMouse.setText("");
        txtMonitor.setText("");
        txtMarcaCPU.setText("");
        txtModeloCPU.setText("");
        txtObservaciones.setText("");      
    }
    
        
    public void cleanTable(){
        String fieldsTable[] = {"N° SALA","N° COMPUTADORA","N° INVENTARIO","N° SERIE CPU","N° SERIE TECLADO","N° SERIE MOUSE","N° SERIE MONITOR","MARCA CPU","MODELO CPU","OBSERVACIONES"};
        defaultTableModel = new DefaultTableModel(null,fieldsTable);
        tblInventario.setModel(defaultTableModel);
    }

    public void getDatos(){
        try {
            DefaultTableModel defaultTableModel1 = (DefaultTableModel) tblInventario.getModel();
            connection = conexion.getConnection();
            String data[] = new String[10];
            String query = "select * from inventario";
            statement = connection.createStatement();
            ResultSet rs = statement.executeQuery(query);
            while(rs.next()){
                for(int i = 0; i < 10; i++){
                    data[i] = rs.getString(fields[i]);
                }
               
                defaultTableModel1.addRow(data);
            }
            tblInventario.setModel(defaultTableModel1);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "NO SE PUEDEN VISUALIZAR LOS DATOS DE LA TABLA", "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
        }
    }
    
    public void enableButton(String button){
        cmdNuevo.setEnabled(false);
        cmdGuardar.setEnabled(false);
        cmdModificar.setEnabled(false);
        cmdEliminar.setEnabled(false);
        
        switch (button) {
            case "nuevo" -> cmdNuevo.setEnabled(true);
            case "guardar" -> cmdGuardar.setEnabled(true);
            case "modificar" -> cmdModificar.setEnabled(true);
            default -> cmdEliminar.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Filtro = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtSala = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtComputadora = new javax.swing.JTextField();
        txtInventario = new javax.swing.JTextField();
        txtSerieCPU = new javax.swing.JTextField();
        txtModeloCPU = new javax.swing.JTextField();
        txtMarcaCPU = new javax.swing.JTextField();
        txtObservaciones = new javax.swing.JTextField();
        txtMouse = new javax.swing.JTextField();
        txtTeclado = new javax.swing.JTextField();
        txtMonitor = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        optSala = new javax.swing.JRadioButton();
        optComputadora = new javax.swing.JRadioButton();
        optInventario = new javax.swing.JRadioButton();
        txtFiltro = new javax.swing.JTextField();
        cmdNuevo = new javax.swing.JButton();
        cmdModificar = new javax.swing.JButton();
        cmdEliminar = new javax.swing.JButton();
        cmdGuardar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInventario = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Numero de Sala");

        txtSala.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Numero de Computadora");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Modelo del CPU");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Marca del CPU");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Numero de Serie del Monitor");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Numero de Serie CPU");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Observaciones");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Numero de Serie del Teclado");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Numero de Serie del Mouse");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Numero de Inventario UNAM");

        txtComputadora.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtInventario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtSerieCPU.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtModeloCPU.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtMarcaCPU.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtObservaciones.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtObservaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtObservacionesActionPerformed(evt);
            }
        });

        txtMouse.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtTeclado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtMonitor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Filtro.add(optSala);
        optSala.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        optSala.setText("Numero de Sala");
        optSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optSalaActionPerformed(evt);
            }
        });

        Filtro.add(optComputadora);
        optComputadora.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        optComputadora.setText("Numero de Computadora");
        optComputadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optComputadoraActionPerformed(evt);
            }
        });

        Filtro.add(optInventario);
        optInventario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        optInventario.setSelected(true);
        optInventario.setText("Numero de Inventario");
        optInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optInventarioActionPerformed(evt);
            }
        });

        txtFiltro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroActionPerformed(evt);
            }
        });
        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFiltroKeyPressed(evt);
            }
        });

        cmdNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/nuevo.png"))); // NOI18N
        cmdNuevo.setText("NUEVO");
        cmdNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNuevoActionPerformed(evt);
            }
        });

        cmdModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/edit-document.png"))); // NOI18N
        cmdModificar.setText("ACTUALIZAR");
        cmdModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdModificarActionPerformed(evt);
            }
        });

        cmdEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/dvavd.png"))); // NOI18N
        cmdEliminar.setText("ELIMINAR");
        cmdEliminar.setToolTipText("");
        cmdEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEliminarActionPerformed(evt);
            }
        });

        cmdGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/interface.png"))); // NOI18N
        cmdGuardar.setText("GUARDAR");
        cmdGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("BUSCAR:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmdNuevo)
                        .addGap(108, 108, 108)
                        .addComponent(cmdGuardar)
                        .addGap(124, 124, 124)
                        .addComponent(cmdModificar)
                        .addGap(116, 116, 116)
                        .addComponent(cmdEliminar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(optSala)
                        .addGap(36, 36, 36)
                        .addComponent(optInventario)
                        .addGap(31, 31, 31)
                        .addComponent(optComputadora)))
                .addContainerGap(240, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdNuevo)
                    .addComponent(cmdGuardar)
                    .addComponent(cmdModificar)
                    .addComponent(cmdEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(optSala)
                    .addComponent(optInventario)
                    .addComponent(optComputadora)
                    .addComponent(jLabel11))
                .addContainerGap())
        );

        tblInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°  SALA", "N° COMPUTADORA", "N° INVENTARIO", "N° SERIE CPU", "N° SERIE TECLADO", "N° SERIE MOUSE", "N° SERIE MONITOR", "MARCA CPU", "MODELO CPU", "OBSERVACIONES"
            }
        ));
        tblInventario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInventarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblInventario);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtComputadora, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(txtInventario))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(30, 30, 30)
                                .addComponent(txtSerieCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtTeclado))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSala, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtMarcaCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtModeloCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel5))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMonitor, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMouse, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(31, 31, 31)
                                .addComponent(txtObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(178, 178, 178))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1065, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtSala, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtComputadora, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtSerieCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTeclado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(txtMouse, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(txtMonitor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtMarcaCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(44, 44, 44))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtModeloCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtObservacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtObservacionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtObservacionesActionPerformed

    private void optComputadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optComputadoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optComputadoraActionPerformed

    private void cmdNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNuevoActionPerformed
        clean();
        enableButton("guardar");
        enableFields();
        cleanTable();
        getDatos();
    }//GEN-LAST:event_cmdNuevoActionPerformed

    
    private void cmdGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarActionPerformed
        if (txtSala.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "FALTA INGRESAR EL NUMERO DE SALA", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtSala.requestFocus();
        }else if (txtComputadora.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "FALTA INGRESAR EL NUMERO DE COMPUTADORA ", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtComputadora.requestFocus();
        }else if (txtInventario.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "FALTA INGRESAR EL NUMERO DE INVENTARIO", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtInventario.requestFocus();
        }else if (txtSerieCPU.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "FALTA INGRESAR EL NUMERO DE SERIE DEL CPU", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtSerieCPU.requestFocus();
        }else if (txtTeclado.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "FALTA INGRESAR EL NUMERO DE SERIE DEL TECLADO", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtTeclado.requestFocus();
        }else if (txtMouse.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "FALTA INGRESAR EL NUMERO DE SERIE DEL MOUSE", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtMouse.requestFocus();
        }else if (txtMonitor.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "FALTA INGRESAR EL NUMERO DE SERIE DEL MONITOR", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtMonitor.requestFocus();
        }else if (txtMarcaCPU.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "FALTA INGRESAR LA MARCA DEL CPU", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtMarcaCPU.requestFocus();
        }else if (txtModeloCPU.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "FALTA INGRESAR EL MODELO DEL CPU", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtModeloCPU.requestFocus();
        }else{
            try{
                connection = conexion.getConnection();
                statement = connection.createStatement();
                String query = "insert into inventario (NumeroDeSala,NumeroDeComputadora,NumeroDeInventarioUNAM,NumeroDeSerieCPU,NumeroDeSerieTeclado,NumeroDeSerieMouse,NumeroDeSerieMonitor,MarcaCPU,ModeloCPU,Observaciones) values (?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement preparedStatement = connection.prepareStatement(query);
                preparedStatement.setString(1, txtSala.getText());
                preparedStatement.setString(2, txtComputadora.getText());
                preparedStatement.setString(3, txtInventario.getText());
                preparedStatement.setString(4, txtSerieCPU.getText());
                preparedStatement.setString(5, txtTeclado.getText());
                preparedStatement.setString(6, txtMouse.getText());
                preparedStatement.setString(7, txtMonitor.getText());
                preparedStatement.setString(8, txtMarcaCPU.getText());
                preparedStatement.setString(9, txtModeloCPU.getText());
                preparedStatement.setString(10, txtObservaciones.getText());
                int n = preparedStatement.executeUpdate();
                if (n > 0){
                    JOptionPane.showMessageDialog(this, "DATOS GUARDADOS CORRECTAMENTE");
                    clean();
                    cleanTable();
                    getDatos();
                    enableButton("nuevo");
                    disableFields();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(this, "LOS DATOS NO HAN SIDO GUARDADOS CORRECTAMENTE", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_cmdGuardarActionPerformed

    private void cmdModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdModificarActionPerformed
        try{
            connection = conexion.getConnection();
            statement = connection.createStatement();
            String query = "update inventario set NumeroDeSala = ?, NumeroDeComputadora = ?, NumeroDeInventarioUNAM = ?, NumeroDeSerieCPU = ?, NumeroDeSerieTeclado = ?, NumeroDeSerieMouse = ?, NumeroDeSerieMonitor = ?, MarcaCPU = ?, ModeloCPU = ?, Observaciones = ?";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, txtSala.getText());
            preparedStatement.setString(2, txtComputadora.getText());
            preparedStatement.setString(3, txtInventario.getText());
            preparedStatement.setString(4, txtSerieCPU.getText());
            preparedStatement.setString(5, txtTeclado.getText());
            preparedStatement.setString(6, txtMouse.getText());
            preparedStatement.setString(7, txtMonitor.getText());
            preparedStatement.setString(8, txtMarcaCPU.getText());
            preparedStatement.setString(9, txtModeloCPU.getText());
            preparedStatement.setString(10, txtObservaciones.getText());
            int n = preparedStatement.executeUpdate();
            if (n > 0){
                JOptionPane.showMessageDialog(this, "DATOS ACTUALIZADOS CORRECTAMENTE");
                clean();
                cleanTable();
                getDatos();
                enableButton("nuevo");
                disableFields();
            }
        } catch (SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(this, "LOS DATOS NO HAN SIDO ACTUALIZADOS CORRECTAMENTE", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cmdModificarActionPerformed

    private void cmdEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEliminarActionPerformed
        int row = tblInventario.getSelectedRow();
        if (row == -1){
            JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR UN REGISTRO", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }else{
            int opt = JOptionPane.showConfirmDialog(this, "¿ESTA SEGURO QUE DESEA ELIMINAR ESTE REGISTRO?", "Pregunta", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (opt == JOptionPane.YES_OPTION){
                try{
                    connection = conexion.getConnection();
                    statement = connection.createStatement();
                    String sql = "delete from inventario where NumeroDeComputadora = ?";
                    PreparedStatement preparedStatement = connection.prepareStatement(sql);
                    preparedStatement.setString(1, txtComputadora.getText());
                    int n = preparedStatement.executeUpdate();
                    if (n > 0)
                    {
                        JOptionPane.showMessageDialog(this, "DATOS ELIMINADOS CORRECTAMENTE");
                        clean();
                        cleanTable();
                        getDatos();
                        enableButton("nuevo");
                        disableFields();
                    }
                } catch (SQLException ex)
                {
                    JOptionPane.showMessageDialog(this, "DATOS NO ELIMINADOS CORRECTAMENTE" + ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_cmdEliminarActionPerformed

    private void tblInventarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInventarioMouseClicked
        try{
            int row = tblInventario.getSelectedRow();
            txtSala.setText(tblInventario.getValueAt(row, 0).toString());
            txtComputadora.setText(tblInventario.getValueAt(row, 1).toString());
            txtInventario.setText(tblInventario.getValueAt(row, 2).toString());
            txtSerieCPU.setText(tblInventario.getValueAt(row, 3).toString());
            txtTeclado.setText(tblInventario.getValueAt(row, 4).toString());
            txtMouse.setText(tblInventario.getValueAt(row, 5).toString());
            txtMonitor.setText(tblInventario.getValueAt(row, 6).toString());
            txtMarcaCPU.setText(tblInventario.getValueAt(row, 7).toString());
            txtModeloCPU.setText(tblInventario.getValueAt(row, 8).toString());
            txtObservaciones.setText(tblInventario.getValueAt(row, 9).toString());
            cmdModificar.setEnabled(true);
            cmdEliminar.setEnabled(true);
            enableFields();
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "ERROR AL SELECCIONAR", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tblInventarioMouseClicked

    private void optSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optSalaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optSalaActionPerformed

    private void optInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optInventarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optInventarioActionPerformed

    private void txtFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroActionPerformed
        
    }//GEN-LAST:event_txtFiltroActionPerformed

    private void txtFiltroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyPressed
        String opt = "NumeroDeInventarioUNAM";
        
        if(optComputadora.isSelected())
            opt = "NumeroDeComputadora";
        else if(optInventario.isSelected())
            opt = "NumeroDeInventarioUNAM";
        else if (optSala.isSelected())
            opt = "NumeroDeSala";
        
        
        String[] registros = new String[100];
        String query = "SELECT * FROM inventario WHERE " + opt + "LIKE '%" + txtFiltro.getText() + "%'";
        defaultTableModel = new DefaultTableModel(null, fields);
        conexion = new Conexion();
        connection = conexion.getConnection();
        try
        {
            statement = (Statement) connection.createStatement();
            resultSet = statement.executeQuery(query);
            while (resultSet.next())
            {
                registros[0] = resultSet.getString("NumeroDeSala");
                registros[1] = resultSet.getString("NumeroDeComputadora");
                registros[2] = resultSet.getString("NumeroDeInventarioUNAM");
                registros[3] = resultSet.getString("NumeroDeSerieCPU");
                registros[4] = resultSet.getString("NumeroDeSerieTeclado");
                registros[5] = resultSet.getString("NumeroDeSerieMouse");
                registros[6] = resultSet.getString("NumeroDeSerieMonitor");
                registros[7] = resultSet.getString("MarcaCPU");
                registros[8] = resultSet.getString("ModeloCPU");
                registros[9] = resultSet.getString("Observaciones");
                defaultTableModel.addRow(registros);
            }
            tblInventario.setModel(defaultTableModel);
        } catch (SQLException ex)
        {
            System.out.println("ERROR AL BUSCAR LOS DATOS : " + ex.getMessage());
        }
    }//GEN-LAST:event_txtFiltroKeyPressed
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.ButtonGroup Filtro;
    private javax.swing.JButton cmdEliminar;
    private javax.swing.JButton cmdGuardar;
    private javax.swing.JButton cmdModificar;
    private javax.swing.JButton cmdNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton optComputadora;
    private javax.swing.JRadioButton optInventario;
    private javax.swing.JRadioButton optSala;
    private javax.swing.JTable tblInventario;
    private javax.swing.JTextField txtComputadora;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtInventario;
    private javax.swing.JTextField txtMarcaCPU;
    private javax.swing.JTextField txtModeloCPU;
    private javax.swing.JTextField txtMonitor;
    private javax.swing.JTextField txtMouse;
    private javax.swing.JTextField txtObservaciones;
    private javax.swing.JTextField txtSala;
    private javax.swing.JTextField txtSerieCPU;
    private javax.swing.JTextField txtTeclado;
    // End of variables declaration//GEN-END:variables
}
